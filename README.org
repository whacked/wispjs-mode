* WispJS Mode

A major mode for the Lisp-to-JavaScript language [[http://jeditoolkit.com/wisp/][Wisp]].

Provides syntax highlighting, an =inferior-lisp= REPL, and a compile command.

Provides a live coding method by piping through the =wisp= program and sending the resulting javascript to browser via [[https://github.com/skeeto/skewer-mode][skewer-mode]]

** Installation

If you're hooked up to [[http://melpa.milkbox.net/][MELPA]]:

#+BEGIN_EXAMPLE
M-x package-refresh-contents
M-x package-install RET wispjs-mode
#+END_EXAMPLE
If not, add this to your =.emacs= first:

#+BEGIN_SRC emacs-lisp
(require 'package)
(add-to-list 'package-archives '("melpa" . "http://melpa.milkbox.net/packages/"))
(package-initialize)
#+END_SRC

/Alternatively/, just grab the single =wispjs-mode.el= and install that in your preferred way.

** Usage

=M-x inferior-lisp= will start a REPL.

=M-x wispjs-mode/compile= will compile the file (by default to the same destination, with a =.js= suffix).

** Live coding with wispjs + skewer-mode

   eval =wispjs-skewer.el=

   =(setq httpd-root default-directory)=

   edit =example.html= and turn on =skewer-mode=
   
   open browser to =http://localhost:8080/example.html=
   
   open e.g. =example.wisp= and start hacking your wisp

   =C-x-e= and =C-M-x= in the wisp-mode buffer to eval the forms in browser!

   run =M-x wispjs-mode/compile= and compile example.wisp to example.js in the current working directory

** Status

Ready to use, but fairly basic. Feedback welcomed.

** History

This package was originally named =wisp-mode=, but was renamed to
=wispjs-mode= to avoid confusion with nother Emacs package for the
"whitespace to lisp" preprocessor called [[https://bitbucket.org/ArneBab/wisp][Wisp]].
